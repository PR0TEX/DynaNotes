version: "3.8"
services:
  mongodb:
    image: mongo
    build:
      context: .
      dockerfile: ./dockerfiles/mongo.dockerfile
    container_name: mongodb
    hostname: mongo
    ports:
      - 27017:27017
    volumes:
      - data:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootuser
      - MONGO_INITDB_ROOT_PASSWORD=rootpass
  mongo-express:
    image: mongo-express
    build: 
      context: .
      dockerfile: ./dockerfiles/mongo-express.dockerfile
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=rootuser
      - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpass
      - ME_CONFIG_MONGODB_SERVER=mongodb
    depends_on:
      - mongodb
#   backend:
#     image: backend
#     build:
#       context: .
#       dockerfile: ./dockerfiles/backend.dockerfile
#     container_name: backend
#     restart: on-failure
#     ports:
#       - 8080:8080
#     depends_on:
#       - mongodb
#     environment:
#       - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=admin
#       - SPRING_DATA_MONGODB_HOST=mongo
#       - SPRING_DATA_MONGODB_PORT=27017
#       - SPRING_DATA_MONGODB_USERNAME=rootuser
#       - SPRING_DATA_MONGODB_PASSWORD=rootpass
#       - SPRING_DATA_MONGODB_DATABASE=dynanotes
#   frontend:
#     image: frontend
#     build:
#       context: src/main/webApp
#       dockerfile: Dockerfile
#     container_name: frontend
#     ports:
#       - 3000:3000
#     depends_on:
#       - backend
volumes:
  data: {}

networks:
  default:
    name: mongodb_network
